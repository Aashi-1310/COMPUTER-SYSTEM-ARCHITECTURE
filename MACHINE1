<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="MACHINE1" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP16" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field4d3d1120">
	</Field>
	<Field name="ADDR12" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field6fad6255">
	</Field>
	<Field name="OP4" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field598d0e2b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register72af493a" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register6f2073ab" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register24a2a5ea" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register19506d6d" />
	<Register name="INP" width="8" initialValue="0" readOnly="false" id="model.module.Register113e11e4" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register7def9543" />
	<Register name="OUT" width="8" initialValue="0" readOnly="false" id="model.module.Register4c53f2e1" />
	<Register name="PC" width="16" initialValue="0" readOnly="false" id="model.module.Register56f2d503" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register37225f08" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register6571b9e5" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="E" bit="0" register="model.module.Register19506d6d" halt="false" id="model.module.ConditionBit25eb3285" />
	<ConditionBit name="S" bit="0" register="model.module.Register37225f08" halt="true" id="model.module.ConditionBit14f32f" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM2f91d8e" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register72af493a" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet31064e1e" />
	<Set name="E&lt;-0" register="model.module.Register19506d6d" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet7b5930dd" />
	<Set name="S&lt;-1" register="model.module.Register37225f08" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet68f00f19" />

	<!--............. test ..........................-->
	<Test name="IF AC(15)=0" register="model.module.Register72af493a" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1cfb4fda" />
	<Test name="IF AC(15)=1" register="model.module.Register72af493a" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test1f8e84e5" />
	<Test name="IF AC=0" register="model.module.Register72af493a" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2de38011" />
	<Test name="IF DR=0" register="model.module.Register24a2a5ea" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4503da73" />
	<Test name="IF E=0" register="model.module.Register19506d6d" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test340d896" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register72af493a" delta="1" id="model.microinstruction.Increment6882ddb7" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register6f2073ab" delta="1" id="model.microinstruction.Increment59d03bbe" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register24a2a5ea" delta="1" id="model.microinstruction.Increment2dbb2b5" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register56f2d503" delta="1" id="model.microinstruction.Increment75a5e10" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHL AC" type="logical" source="model.module.Register72af493a" destination="model.module.Register72af493a" direction="left" distance="1" id="model.microinstruction.Shift7e8fcdf9" />
	<Shift name="AC&lt;-SHR AC" type="logical" source="model.module.Register72af493a" destination="model.module.Register72af493a" direction="right" distance="1" id="model.microinstruction.Shift2bf0a6e6" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register72af493a" source2="model.module.Register72af493a" destination="model.module.Register72af493a" id="model.microinstruction.Logical5d796ab5" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register72af493a" source2="model.module.Register24a2a5ea" destination="model.module.Register72af493a" id="model.microinstruction.Logical7310306a" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register19506d6d" source2="model.module.Register19506d6d" destination="model.module.Register19506d6d" id="model.microinstruction.Logical31468798" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR,E&lt;-COUT" type="ADD" source1="model.module.Register72af493a" source2="model.module.Register24a2a5ea" destination="model.module.Register72af493a" carryBit="model.module.ConditionBit25eb3285" id="model.microinstruction.Arithmetic20e9fb9e" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register19506d6d" srcStartBit="0" dest="model.module.Register72af493a" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR365311f4" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register19506d6d" srcStartBit="0" dest="model.module.Register72af493a" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR44b2f434" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register24a2a5ea" srcStartBit="0" dest="model.module.Register72af493a" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR41cdd17d" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register7def9543" srcStartBit="0" dest="model.module.Register6f2073ab" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR2e97f7d1" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register56f2d503" srcStartBit="0" dest="model.module.Register6f2073ab" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR658f46" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register72af493a" srcStartBit="0" dest="model.module.Register19506d6d" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR5325d82a" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register72af493a" srcStartBit="15" dest="model.module.Register19506d6d" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR7cccbd0a" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register6f2073ab" srcStartBit="0" dest="model.module.Register56f2d503" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR6df4e43d" />
	<TransferRtoR name="TR(0)&lt;-AC(0)" source="model.module.Register72af493a" srcStartBit="0" dest="model.module.Register6571b9e5" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR3c5e3df0" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register7def9543" id="model.microinstruction.Decode2563f39c" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register72af493a" connection="[Console]" id="model.microinstruction.IO6f7c2e01" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register72af493a" connection="[Console]" id="model.microinstruction.IO148ba60d" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM2f91d8e" data="model.module.Register6f2073ab" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess59f7a8d1" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM2f91d8e" data="model.module.Register24a2a5ea" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess63325f60" />
	<MemoryAccess name="IR&lt;-M{AR]" direction="read" memory="model.module.RAM2f91d8e" data="model.module.Register7def9543" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess6d306921" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM2f91d8e" data="model.module.Register72af493a" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess24c20144" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM2f91d8e" data="model.module.Register56f2d503" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess4017842d" />
	<MemoryAccess name="M{AR}&lt;-DR" direction="write" memory="model.module.RAM2f91d8e" data="model.module.Register24a2a5ea" address="model.module.Register6f2073ab" id="model.microinstruction.MemoryAccess31af0a10" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End5fb80465" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR658f46" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6d306921" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2e97f7d1" />
		<Microinstruction microRef="model.microinstruction.Decode2563f39c" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f0b0f2" assemblyColors="#f0b0f2" >
		<Microinstruction microRef="model.microinstruction.IO148ba60d" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c68182" assemblyColors="#c68182" >
		<Microinstruction microRef="model.microinstruction.IO6f7c2e01" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#93d9b1" assemblyColors="#93d9b1" >
		<Microinstruction microRef="model.microinstruction.CpusimSet68f00f19" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f2abd2" assemblyColors="#f2abd2" >
		<Microinstruction microRef="model.microinstruction.Test340d896" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#db95c0" assemblyColors="#db95c0" >
		<Microinstruction microRef="model.microinstruction.Test2de38011" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#eeb483" assemblyColors="#eeb483" >
		<Microinstruction microRef="model.microinstruction.Test1f8e84e5" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#eed1d6" assemblyColors="#eed1d6" >
		<Microinstruction microRef="model.microinstruction.Test1cfb4fda" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a2bbb4" assemblyColors="#a2bbb4" >
		<Microinstruction microRef="model.microinstruction.Increment6882ddb7" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#ade0b6" assemblyColors="#ade0b6" >
		<Microinstruction microRef="model.microinstruction.Shift7e8fcdf9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR365311f4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7cccbd0a" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#e8e2f3" assemblyColors="#e8e2f3" >
		<Microinstruction microRef="model.microinstruction.Shift2bf0a6e6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR44b2f434" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5325d82a" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#8e87aa" assemblyColors="#8e87aa" >
		<Microinstruction microRef="model.microinstruction.Logical31468798" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#fcf9f5" assemblyColors="#fcf9f5" >
		<Microinstruction microRef="model.microinstruction.Logical5d796ab5" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a6a487" assemblyColors="#a6a487" >
		<Microinstruction microRef="model.microinstruction.CpusimSet7b5930dd" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#e4c3e7" assemblyColors="#e4c3e7" >
		<Microinstruction microRef="model.microinstruction.CpusimSet31064e1e" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="d" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#f5d6bc #97b4f5" assemblyColors="#f5d6bc #97b4f5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Increment2dbb2b5" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess31af0a10" />
		<Microinstruction microRef="model.microinstruction.Test4503da73" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="9" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#f1c89c #95e993" assemblyColors="#f1c89c #95e993" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR658f46" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="7" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#95acc0 #98c0fd" assemblyColors="#95acc0 #98c0fd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess24c20144" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="5" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#f3d195 #e3b8ee" assemblyColors="#f3d195 #e3b8ee" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR41cdd17d" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="3" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#9deba2 #8c9ba2" assemblyColors="#9deba2 #8c9ba2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Arithmetic20e9fb9e" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="1" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#dd91e1 #f0fbcc" assemblyColors="#dd91e1 #f0fbcc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess59f7a8d1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Logical7310306a" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#93decb #91888d" assemblyColors="#93decb #91888d" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Increment2dbb2b5" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess31af0a10" />
		<Microinstruction microRef="model.microinstruction.Test4503da73" />
		<Microinstruction microRef="model.microinstruction.Increment75a5e10" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="8" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#cdbc8b #d9da9e" assemblyColors="#cdbc8b #d9da9e" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR6df4e43d" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="6" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#90b7a1 #e1ac88" assemblyColors="#90b7a1 #e1ac88" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess24c20144" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="4" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#f0eae7 #a2faab" assemblyColors="#f0eae7 #a2faab" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR41cdd17d" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#c399d6 #8cf6ea" assemblyColors="#c399d6 #8cf6ea" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Arithmetic20e9fb9e" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#86ae91 #a883f9" assemblyColors="#86ae91 #a883f9" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess63325f60" />
		<Microinstruction microRef="model.microinstruction.Logical7310306a" />
		<Microinstruction microRef="model.microinstruction.End5fb80465" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM2f91d8e" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
