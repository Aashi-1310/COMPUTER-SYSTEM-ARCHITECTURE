<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="MACHINE2" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="I" type="required" numBits="1" relativity="absolute" signed="false" defaultValue="0" id="model.Field32a801eb">
	</Field>
	<Field name="OP3" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field4bd2e29a">
	</Field>
	<Field name="OP16" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field2e0ff635">
	</Field>
	<Field name="ADDR12" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field7c250153">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Registere70e065" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register52ea1503" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register385ff35" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register577e598f" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register5e84e8cd" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register5cc4bc13" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register70148ce9" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register55031145" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register2c3849a8" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register142e189" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register4c0651dd" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="E" bit="0" register="model.module.Register577e598f" halt="false" id="model.module.ConditionBit229d34fc" />
	<ConditionBit name="S" bit="0" register="model.module.Register142e189" halt="true" id="model.module.ConditionBit5de7393b" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM4bbfc5a7" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Registere70e065" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet1af2d538" />
	<Set name="E&lt;-0" register="model.module.Register577e598f" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet2f55b93c" />
	<Set name="S&lt;-1" register="model.module.Register142e189" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet558b552f" />

	<!--............. test ..........................-->
	<Test name="IF AC(15)=0" register="model.module.Registere70e065" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test6ba46396" />
	<Test name="IF AC(15)=1" register="model.module.Registere70e065" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test677320cf" />
	<Test name="IF AC=0" register="model.module.Registere70e065" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test656df944" />
	<Test name="IF DR=0" register="model.module.Register385ff35" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test6a40faeb" />
	<Test name="IF E=0" register="model.module.Register577e598f" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test22b09ce6" />
	<Test name="IF I(0)=0" register="model.module.Register5e84e8cd" start="0" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test5cbbb527" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Registere70e065" delta="1" id="model.microinstruction.Increment5616c02d" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register52ea1503" delta="1" id="model.microinstruction.Increment3becffa6" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register385ff35" delta="1" id="model.microinstruction.Increment1d1d0391" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register2c3849a8" delta="1" id="model.microinstruction.Increment1c8e8f98" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHL AC" type="logical" source="model.module.Registere70e065" destination="model.module.Registere70e065" direction="left" distance="1" id="model.microinstruction.Shift55406c76" />
	<Shift name="AC&lt;-SHR AC" type="logical" source="model.module.Registere70e065" destination="model.module.Registere70e065" direction="right" distance="1" id="model.microinstruction.Shift3ddacb09" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Registere70e065" source2="model.module.Registere70e065" destination="model.module.Registere70e065" id="model.microinstruction.Logical595f90fb" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Registere70e065" source2="model.module.Register385ff35" destination="model.module.Registere70e065" id="model.microinstruction.Logical32b69a5a" />
	<Logical name="AC&gt;-AC OR DR" type="OR" source1="model.module.Registere70e065" source2="model.module.Register385ff35" destination="model.module.Registere70e065" id="model.microinstruction.Logical6934c763" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register577e598f" source2="model.module.Register577e598f" destination="model.module.Register577e598f" id="model.microinstruction.Logical35b7dbbf" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR,E&lt;-COUT" type="ADD" source1="model.module.Registere70e065" source2="model.module.Register385ff35" destination="model.module.Registere70e065" carryBit="model.module.ConditionBit229d34fc" id="model.microinstruction.Arithmetic10ca4dba" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register577e598f" srcStartBit="0" dest="model.module.Registere70e065" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR162871b3" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register577e598f" srcStartBit="0" dest="model.module.Registere70e065" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR5968a3ca" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register385ff35" srcStartBit="0" dest="model.module.Registere70e065" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR5289e17b" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register70148ce9" srcStartBit="0" dest="model.module.Register52ea1503" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR10ecc10d" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register2c3849a8" srcStartBit="0" dest="model.module.Register52ea1503" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR451c8f4a" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Registere70e065" srcStartBit="0" dest="model.module.Register577e598f" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR597602d0" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Registere70e065" srcStartBit="15" dest="model.module.Register577e598f" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR4469b2bc" />
	<TransferRtoR name="I(0)&lt;-IR(12)" source="model.module.Register70148ce9" srcStartBit="12" dest="model.module.Register5e84e8cd" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR32fbe795" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register52ea1503" srcStartBit="0" dest="model.module.Register2c3849a8" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR7ab5a86a" />
	<TransferRtoR name="TR(0)&lt;-AC(0)" source="model.module.Registere70e065" srcStartBit="0" dest="model.module.Register4c0651dd" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR73c019d2" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register70148ce9" id="model.microinstruction.Decode1e6a9f70" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Registere70e065" connection="[Console]" id="model.microinstruction.IO6fe55252" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Registere70e065" connection="[Console]" id="model.microinstruction.IO3844413c" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM4bbfc5a7" data="model.module.Register52ea1503" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess4b39d16f" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM4bbfc5a7" data="model.module.Register385ff35" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess1e24667" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM4bbfc5a7" data="model.module.Register70148ce9" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess4450e3cb" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM4bbfc5a7" data="model.module.Registere70e065" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess5e8707dc" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM4bbfc5a7" data="model.module.Register385ff35" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess5b3007ca" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM4bbfc5a7" data="model.module.Register2c3849a8" address="model.module.Register52ea1503" id="model.microinstruction.MemoryAccess4872b3b5" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.Endbff4fcb" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR451c8f4a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess4450e3cb" />
		<Microinstruction microRef="model.microinstruction.Increment1c8e8f98" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR10ecc10d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR32fbe795" />
		<Microinstruction microRef="model.microinstruction.Test5cbbb527" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess4b39d16f" />
		<Microinstruction microRef="model.microinstruction.Decode1e6a9f70" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#eb98e0 #9ccde8 #c7dd9e" assemblyColors="#eb98e0 #9ccde8 #c7dd9e" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess4872b3b5" />
		<Microinstruction microRef="model.microinstruction.Increment3becffa6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7ab5a86a" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#f4f198 #bcfda5 #9f89be" assemblyColors="#f4f198 #bcfda5 #9f89be" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR7ab5a86a" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#bfdeb3 #cebbf3 #93a8bb" assemblyColors="#bfdeb3 #cebbf3 #93a8bb" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5e8707dc" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#ce8688 #beabc6 #feb0a0" assemblyColors="#ce8688 #beabc6 #feb0a0" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1e24667" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5289e17b" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#e68ba4 #b6b8e6 #a2a8ea" assemblyColors="#e68ba4 #b6b8e6 #a2a8ea" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1e24667" />
		<Microinstruction microRef="model.microinstruction.Logical32b69a5a" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#e0aff8 #abfda5 #a790f6" assemblyColors="#e0aff8 #abfda5 #a790f6" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1e24667" />
		<Microinstruction microRef="model.microinstruction.Arithmetic10ca4dba" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#88bdad" assemblyColors="#88bdad" >
		<Microinstruction microRef="model.microinstruction.IO3844413c" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#87edd3" assemblyColors="#87edd3" >
		<Microinstruction microRef="model.microinstruction.IO6fe55252" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a8e9a5" assemblyColors="#a8e9a5" >
		<Microinstruction microRef="model.microinstruction.CpusimSet558b552f" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#eca0e1" assemblyColors="#eca0e1" >
		<Microinstruction microRef="model.microinstruction.Test22b09ce6" />
		<Microinstruction microRef="model.microinstruction.Increment1c8e8f98" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dedf95" assemblyColors="#dedf95" >
		<Microinstruction microRef="model.microinstruction.Test656df944" />
		<Microinstruction microRef="model.microinstruction.Increment1c8e8f98" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#95c8d7" assemblyColors="#95c8d7" >
		<Microinstruction microRef="model.microinstruction.Test677320cf" />
		<Microinstruction microRef="model.microinstruction.Increment1c8e8f98" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#e6ebea" assemblyColors="#e6ebea" >
		<Microinstruction microRef="model.microinstruction.Test6ba46396" />
		<Microinstruction microRef="model.microinstruction.Increment1c8e8f98" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#ca90e8" assemblyColors="#ca90e8" >
		<Microinstruction microRef="model.microinstruction.Increment5616c02d" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#bedcd8" assemblyColors="#bedcd8" >
		<Microinstruction microRef="model.microinstruction.Shift55406c76" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR162871b3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4469b2bc" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a5e1a3" assemblyColors="#a5e1a3" >
		<Microinstruction microRef="model.microinstruction.Shift3ddacb09" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5968a3ca" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR597602d0" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#fcc995" assemblyColors="#fcc995" >
		<Microinstruction microRef="model.microinstruction.Logical35b7dbbf" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a5d895" assemblyColors="#a5d895" >
		<Microinstruction microRef="model.microinstruction.Logical595f90fb" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f7f797" assemblyColors="#f7f797" >
		<Microinstruction microRef="model.microinstruction.CpusimSet2f55b93c" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c3d6ac" assemblyColors="#c3d6ac" >
		<Microinstruction microRef="model.microinstruction.CpusimSet1af2d538" />
		<Microinstruction microRef="model.microinstruction.Endbff4fcb" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM4bbfc5a7" startingAddress="26" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
